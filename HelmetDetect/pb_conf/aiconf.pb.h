// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aiconf.proto

#ifndef PROTOBUF_aiconf_2eproto__INCLUDED
#define PROTOBUF_aiconf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace aicfg {
class AIConfig;
class AIConfigDefaultTypeInternal;
extern AIConfigDefaultTypeInternal _AIConfig_default_instance_;
class AISet;
class AISetDefaultTypeInternal;
extern AISetDefaultTypeInternal _AISet_default_instance_;
}  // namespace aicfg

namespace aicfg {

namespace protobuf_aiconf_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_aiconf_2eproto

enum RunTime {
  CPU = 0,
  GPU = 1,
  DSP = 2,
  APU = 3,
  NNAPI = 4,
  RunTime_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RunTime_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RunTime_IsValid(int value);
const RunTime RunTime_MIN = CPU;
const RunTime RunTime_MAX = NNAPI;
const int RunTime_ARRAYSIZE = RunTime_MAX + 1;

const ::google::protobuf::EnumDescriptor* RunTime_descriptor();
inline const ::std::string& RunTime_Name(RunTime value) {
  return ::google::protobuf::internal::NameOfEnum(
    RunTime_descriptor(), value);
}
inline bool RunTime_Parse(
    const ::std::string& name, RunTime* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RunTime>(
    RunTime_descriptor(), name, value);
}
enum DataFormat {
  NCHW = 0,
  NHWC = 1,
  DataFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataFormat_IsValid(int value);
const DataFormat DataFormat_MIN = NCHW;
const DataFormat DataFormat_MAX = NHWC;
const int DataFormat_ARRAYSIZE = DataFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataFormat_descriptor();
inline const ::std::string& DataFormat_Name(DataFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataFormat_descriptor(), value);
}
inline bool DataFormat_Parse(
    const ::std::string& name, DataFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataFormat>(
    DataFormat_descriptor(), name, value);
}
// ===================================================================

class AIConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aicfg.AIConfig) */ {
 public:
  AIConfig();
  virtual ~AIConfig();

  AIConfig(const AIConfig& from);

  inline AIConfig& operator=(const AIConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AIConfig& default_instance();

  static inline const AIConfig* internal_default_instance() {
    return reinterpret_cast<const AIConfig*>(
               &_AIConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AIConfig* other);

  // implements Message ----------------------------------------------

  inline AIConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  AIConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AIConfig& from);
  void MergeFrom(const AIConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AIConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string model_path = 1;
  void clear_model_path();
  static const int kModelPathFieldNumber = 1;
  const ::std::string& model_path() const;
  void set_model_path(const ::std::string& value);
  #if LANG_CXX11
  void set_model_path(::std::string&& value);
  #endif
  void set_model_path(const char* value);
  void set_model_path(const char* value, size_t size);
  ::std::string* mutable_model_path();
  ::std::string* release_model_path();
  void set_allocated_model_path(::std::string* model_path);

  // .aicfg.RunTime runtime = 2;
  void clear_runtime();
  static const int kRuntimeFieldNumber = 2;
  ::aicfg::RunTime runtime() const;
  void set_runtime(::aicfg::RunTime value);

  // .aicfg.DataFormat data_format = 3;
  void clear_data_format();
  static const int kDataFormatFieldNumber = 3;
  ::aicfg::DataFormat data_format() const;
  void set_data_format(::aicfg::DataFormat value);

  // @@protoc_insertion_point(class_scope:aicfg.AIConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr model_path_;
  int runtime_;
  int data_format_;
  mutable int _cached_size_;
  friend struct protobuf_aiconf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AISet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aicfg.AISet) */ {
 public:
  AISet();
  virtual ~AISet();

  AISet(const AISet& from);

  inline AISet& operator=(const AISet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AISet& default_instance();

  static inline const AISet* internal_default_instance() {
    return reinterpret_cast<const AISet*>(
               &_AISet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AISet* other);

  // implements Message ----------------------------------------------

  inline AISet* New() const PROTOBUF_FINAL { return New(NULL); }

  AISet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AISet& from);
  void MergeFrom(const AISet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AISet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .aicfg.AIConfig config = 1;
  int config_size() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::aicfg::AIConfig& config(int index) const;
  ::aicfg::AIConfig* mutable_config(int index);
  ::aicfg::AIConfig* add_config();
  ::google::protobuf::RepeatedPtrField< ::aicfg::AIConfig >*
      mutable_config();
  const ::google::protobuf::RepeatedPtrField< ::aicfg::AIConfig >&
      config() const;

  // @@protoc_insertion_point(class_scope:aicfg.AISet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::aicfg::AIConfig > config_;
  mutable int _cached_size_;
  friend struct protobuf_aiconf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AIConfig

// string model_path = 1;
inline void AIConfig::clear_model_path() {
  model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AIConfig::model_path() const {
  // @@protoc_insertion_point(field_get:aicfg.AIConfig.model_path)
  return model_path_.GetNoArena();
}
inline void AIConfig::set_model_path(const ::std::string& value) {
  
  model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aicfg.AIConfig.model_path)
}
#if LANG_CXX11
inline void AIConfig::set_model_path(::std::string&& value) {
  
  model_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aicfg.AIConfig.model_path)
}
#endif
inline void AIConfig::set_model_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aicfg.AIConfig.model_path)
}
inline void AIConfig::set_model_path(const char* value, size_t size) {
  
  model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aicfg.AIConfig.model_path)
}
inline ::std::string* AIConfig::mutable_model_path() {
  
  // @@protoc_insertion_point(field_mutable:aicfg.AIConfig.model_path)
  return model_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AIConfig::release_model_path() {
  // @@protoc_insertion_point(field_release:aicfg.AIConfig.model_path)
  
  return model_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AIConfig::set_allocated_model_path(::std::string* model_path) {
  if (model_path != NULL) {
    
  } else {
    
  }
  model_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_path);
  // @@protoc_insertion_point(field_set_allocated:aicfg.AIConfig.model_path)
}

// .aicfg.RunTime runtime = 2;
inline void AIConfig::clear_runtime() {
  runtime_ = 0;
}
inline ::aicfg::RunTime AIConfig::runtime() const {
  // @@protoc_insertion_point(field_get:aicfg.AIConfig.runtime)
  return static_cast< ::aicfg::RunTime >(runtime_);
}
inline void AIConfig::set_runtime(::aicfg::RunTime value) {
  
  runtime_ = value;
  // @@protoc_insertion_point(field_set:aicfg.AIConfig.runtime)
}

// .aicfg.DataFormat data_format = 3;
inline void AIConfig::clear_data_format() {
  data_format_ = 0;
}
inline ::aicfg::DataFormat AIConfig::data_format() const {
  // @@protoc_insertion_point(field_get:aicfg.AIConfig.data_format)
  return static_cast< ::aicfg::DataFormat >(data_format_);
}
inline void AIConfig::set_data_format(::aicfg::DataFormat value) {
  
  data_format_ = value;
  // @@protoc_insertion_point(field_set:aicfg.AIConfig.data_format)
}

// -------------------------------------------------------------------

// AISet

// repeated .aicfg.AIConfig config = 1;
inline int AISet::config_size() const {
  return config_.size();
}
inline void AISet::clear_config() {
  config_.Clear();
}
inline const ::aicfg::AIConfig& AISet::config(int index) const {
  // @@protoc_insertion_point(field_get:aicfg.AISet.config)
  return config_.Get(index);
}
inline ::aicfg::AIConfig* AISet::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:aicfg.AISet.config)
  return config_.Mutable(index);
}
inline ::aicfg::AIConfig* AISet::add_config() {
  // @@protoc_insertion_point(field_add:aicfg.AISet.config)
  return config_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::aicfg::AIConfig >*
AISet::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:aicfg.AISet.config)
  return &config_;
}
inline const ::google::protobuf::RepeatedPtrField< ::aicfg::AIConfig >&
AISet::config() const {
  // @@protoc_insertion_point(field_list:aicfg.AISet.config)
  return config_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace aicfg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::aicfg::RunTime> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::aicfg::RunTime>() {
  return ::aicfg::RunTime_descriptor();
}
template <> struct is_proto_enum< ::aicfg::DataFormat> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::aicfg::DataFormat>() {
  return ::aicfg::DataFormat_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_aiconf_2eproto__INCLUDED
